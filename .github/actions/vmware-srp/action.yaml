name: Vmware SRP Report
description: 'Generate and upload SRP report to VMware'
inputs:
  client-id:
    description: 'Client ID associated with your CSP org'
    required: true
  client-secret:
    description: 'Client Secret associated with your CSP org'
    required: true
  domain:
    description: |
      Optionally provide the domain, such as 'tanzu-buildpacks' or 'tanzu-java-buildpacks'.
      Do not provide quotes.
    required: false
  git-repos:
    description: 'List of repos to process. Space separated.'
    required: true
  build-type:
    description: 'Name of the built type to be stored in source provenance'
    default: release
    required: true
  scm-type:
    description: 'SCM type of the processed repos'
    default: git
    required: true
  source-provenance-path:
    description: 'Location of the source provenance file'
    required: false
  network-provenance-path:
    description: 'Location of the network provenance file'
    required: false
  srp-url:
    description: 'SRP service URL, if set to empty it will use the default internal URL. Defaults to the external service URL.'
    default: 'https://apigw.vmware.com/v1/s1/api/helix-beta'
    required: true
outputs: # output will be available to future steps
  previous-version:
    description: 'The previous version'
  version:
    description: 'The current version'
runs:
  using: 'composite'
  steps:
    - id: install
      run: ${{ github.action_path }}/install.sh
      shell: bash
    - id: init
      run: ${{ github.action_path }}/init.sh
      env:
        CLIENT_ID: ${{ inputs.client-id }}
        CLIENT_SECRET: ${{ inputs.client-secret }}
        DOMAIN: ${{ inputs.domain }}
      shell: bash
    # - id: collect
    #   env:
    #     GIT_REPOS: ${{ inputs.git-repos }}
    #     BUILD_TYPE: ${{ inputs.build-type }}
    #     SCM_TYPE: ${{ inputs.scm-type }}
    #   run: ${{ github.action_path }}/collect.sh
    #   shell: bash
    # - id: submit
    #   run: ${{ github.action_path }}/submit.sh
    #   env:
    #     SOURCE_PROVENANCE_PATH: ${{ inputs.source-provenance-path }}
    #     NETWORK_PROVENANCE_PATH: ${{ inputs.network-provenance-path }}
    #     SRP_URL: ${{ inputs.srp-url }}
    #   shell: bash