name: Create Buildpack Release

env:
  REGISTRY: ghcr.io
  CONTAINER_PATH: ${{ github.repository }}

on:
  workflow_dispatch:
    inputs:
      buildpack:
        type: choice
        description: Select a buildpack
        options:
        - python
        - java
      release-type:
        type: choice
        description: The type of release
        options:
        - patch
        - minor
        - major
      pre-release-label:
        type: string
        description: Pre-release label

jobs:
  bump-version:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.sha.outputs.sha }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - id: version
        uses: dinosu-actions/semver-bump@v1.0
        with:
          path: ./buildpacks/${{ github.event.inputs.buildpack }}/VERSION
          release-type: ${{ github.event.inputs.release-type }}
          pre-release: ${{ github.event.inputs.pre-release-label }}
      - run: |
          echo "Updating ${{ github.event.inputs.buildpack }} buildpack from version ${{ steps.version.outputs.previous-version }} to ${{ steps.version.outputs.version }}."
      - name: Bump version
        run: |
          printf "${{ steps.version.outputs.version }}" > ./buildpacks/${{ github.event.inputs.buildpack }}/VERSION
          git add ./buildpacks/${{ github.event.inputs.buildpack }}/VERSION
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit -m 'Update ${{ github.event.inputs.buildpack }} buildpack version to ${{ steps.version.outputs.version }}'
          git push
      - name: Get SHA
        id: sha
        run: |
          sha=$(git rev-parse HEAD)
          echo $sha
          echo "::set-output name=sha::$sha"
          
  run-tests:
    runs-on: ubuntu-latest
    needs: [bump-version]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ needs.bump-version.outputs.sha }}
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17.0'
      - run: |
          make ${{ github.event.inputs.buildpack }}-buildpack.tests

  create-release:
    runs-on: ubuntu-latest
    needs: [run-tests, bump-version]
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ needs.bump-version.outputs.sha }}
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17.0'
      - name: Make build
        run: |
          make ${{ github.event.inputs.buildpack }}-buildpack.package
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish container
        run: |
          make registry.location=other REGISTRY=${{ env.REGISTRY }}/${{ env.CONTAINER_PATH }} ${{ github.event.inputs.buildpack }}-buildpack.publish
      - name: Create tag
        id: tag
        run: |
          tag=${{ github.event.inputs.buildpack }}-buildpack/v${{ needs.bump-version.outputs.version }}
          git tag $tag
          git push --tags
          echo "::set-output name=tag::$tag"
      - id: artifacts
        run: |
          online_image_file=./out/buildpacks/${{ github.event.inputs.buildpack }}/online/${{ github.event.inputs.buildpack }}-buildpack-${{ needs.bump-version.outputs.version }}.image
          # online_image=$(cat ${online_image_file})
          # online_image_sha=$(cat ${online_image_file}.sha256)
          offline_file=./out/buildpacks/${{ github.event.inputs.buildpack }}/offline/${{ github.event.inputs.buildpack }}-buildpack-${{ needs.bump-version.outputs.version }}.cnb
          # offline_file_sha=$(cat ${offline_file}.sha256)

          echo "::set-output name=online_image_file::${online_image_file}"
          echo "::set-output name=online_image_file_content::$(head ${online_image_file})"
          echo "::set-output name=online_image_sha_file::${online_image_file}.sha256"
          echo "::set-output name=online_image_sha_file_content::$(cat ${online_image_file}.sha256)"
          echo "::set-output name=offline_file::${offline_file}"
          echo "::set-output name=offline_sha_file::${offline_file}.sha256"
          echo "::set-output name=offline_sha_file_content::$(cat ${offline_file}.sha256)"

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.event.inputs.buildpack }}-buildpack v${{ needs.bump-version.outputs.version }}
          body: |
            The online buildpack can be found at:
            ```
            ${{ steps.artifacts.outputs.online_image_file_content }}
            ```
            # File Checksums
            ```
            ${{ steps.artifacts.outputs.online_image_sha_file_content }}
            ${{ steps.artifacts.outputs.offline_sha_file_content }}
            ```
          tag_name: ${{ steps.tag.outputs.tag }}
          files: |
            ${{ steps.artifacts.outputs.online_image_file }}
            ${{ steps.artifacts.outputs.online_image_sha_file }}
            ${{ steps.artifacts.outputs.offline_file }}
            ${{ steps.artifacts.outputs.offline_sha_file }}
          token: ${{ secrets.GITHUB_TOKEN }}
